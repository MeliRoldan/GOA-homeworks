# შექმენით სია ადამიანების და რენდომ აარჩიეთ, კითხვაზე პასუხის გაცეის შემდეგ თუ სწორად უპასუხა ემატება 10 ქულა , თუ არა აკლდება 10

import random #შემთხვევითი მოდულის იმპორტი

user_names = ["Meli", "Nika", "Giorgi", "Luka", "Ana"] # მონაწილეების სახელების სია
operator = ["+", "-", "*", "/", ">", "<"] # მათეტიკური და შედარების ოპერატორების სია
points = 0 # ქულის ცვლადი, სადაც შევინახავთ ქულებს
results = {
    "Meli" : [],
    "Nika": [],
    "Giorgi": [],
    "Luka": [],
    "Ana": []
} # შედეგების ლექსიკონი სადაც ინახება წყვილებად მონაწილეების სახელს (გასაღები) + თავისი მნიშვნელობა, რომელშიც შეინახება საერთო მიღებული ქულა

while user_names: # while ციკლი რომელი ამეორებს შიგნით მოცემულ მოქმედებებს სანამ მონაწილეების სია ცარიელი არაა
    ran_participant = random.choice(user_names) # რანდომ სახელის ცვლადი
    print("The participant is: " + ran_participant) # გამოგვაქვს რენდომ სახელი
    i = 0 # სეინტერაციო ცვლადი
    while i < 5 : # while ციკლი რომელიც მეორდება 5-ჯერ
        num1 = random.randint(1,5) # პირველი რენდომ რიცხვი
        num2 = random.randint(1,10) # მეორე რენდომ რიცხვი
        ran_operator = random.choice(operator) # რენდომ ოპერატორი
        questions_string = str(num1) + " " + ran_operator + " " + str(num2) # კითვის ცვლადი
        print("The question is: " + questions_string + " ?") # გამოგვაქვს კითხვა, რომელიც შეიცავს კითხვის ცვლადს
        answer = input("Write your answer: ").lower().capitalize() # პასუხის ინფუთი, სადაც მომხმარებელი შეიტანს პასუხს და სტრინგის შემთხვევაში როცა True და False პასუხებს შეიტანს, რათა სწორი ბულინი მივიღოთ მიუხედავად იმისა დიდი თუ პატარა ასოებით დაწერს, ყველა ასო ჯერ დაპატარავდება და შემდეგ პრიველი ასო იქნება დიდად
        question = eval(questions_string) # eval() ფუნქცია გამოიყენება იმისთვის, რომ სტრინგი მათემატიკურ ან პირობით მოქმედებად გარდავქმნათ და შევაფასოთ ანუ მივიღოთ შედეგი
        if str(question) == answer : # თუ კითხვის ცვლადის შედეგი და პასუხის ცვლადი უდრის
            points += 10 # ვამატებთ 10 ქულას
            print("Corret!", points, " points.")
        else: # სხვა შემთხვევაში
            if points <= 0 : # თუ ქულა 0-ს უდრის ან ნაკლებია ქულა უდრიდეს 0-ს რათა მონაწილემ არ მიიღოს - ქულები
                points = 0
                print("Incorrect.", points, " points.")
            else: 
                points -= 10 # თუ ქულა ნულზე მეტია ვაკლებთ -10 ქულას
                print("Incorrect.", points, " points.")
        i += 1 # საინტერაციო ცვლადს ვუმატებთ 1-ს, რათა განმეორდეს ხუთჯერ
    results[ran_participant] = points # შედეგების ლექსიკონში შენახულ მონაწილიის სახელს, რომელიც რენდომ მონაწილეს უდრის ვანიჭებთ საბოლოო ქულების მნიშვნელობას
    user_names.remove(ran_participant) # მონაწილეების სახელების სიისან ვშლით რენდომად ამორჩეულ მონაწილეს რათა აღარ განმეორდეს
    print("You have completed your round with ", points, " points.")
    print("---------------------------------------")
    points = 0 # ვანულებთ ქულებს, რათა ციკლის გამეორებისას ახალ მანიწელს ქონდეს ნულა ქულა
print("All participants have completed the round.") # გამოგვაქვს შეტყობინება, რომ ყველა მონაწილემ გასცა პასუხები
print("The results are:")
for participant, result in results.items(): # for ციკლი შედეგებისს ლექსიკონის თითოეულ გასაღებს და მისი მინიშვნელობას არქმევს participant-ს და result-ს, და გამოაქვს სათითაოდ სტრინგად
    print(f"{participant}: {result}.")
